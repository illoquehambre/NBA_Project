// Generated by https://quicktype.io

export interface TeamScheduleResponse {
    _internal: Internal;
    league:    League;
}

export interface Internal {
    pubDateTime:             string;
    igorPath:                string;
    xslt:                    string;
    xsltForceRecompile:      string;
    xsltInCache:             string;
    xsltCompileTimeMillis:   string;
    xsltTransformTimeMillis: string;
    consolidatedDomKey:      string;
    endToEndTimeMillis:      string;
}

export interface League {
    lastStandardGamePlayedIndex: number;
    standard:                    Match[];
    africa:                      Match[];
    sacramento:                  Match[];
    vegas:                       Match[];
    utah:                        Match[];
}

export interface Match {
    seasonStageId:     number;
    seasonId:          string;
    gameUrlCode:       string;
    gameId:            string;
    statusNum:         number;
    extendedStatusNum: number;
    startTimeEastern:  string;
    startTimeUTC:      string;
    startDateEastern:  string;
    homeStartDate:     string;
    homeStartTime:     string;
    visitorStartDate:  string;
    visitorStartTime:  string;
    isHomeTeam:        boolean;
    isStartTimeTBD:    boolean;
    watch:             Watch;
    nugget:            Nugget;
    vTeam:             StandardHTeam;
    hTeam:             StandardHTeam;
    playoffs?:         Playoffs;
    tags?:             string[];
}

export interface StandardHTeam {
    teamId: string;
    score:  string;
}

export interface Nugget {
    text: string;
}

export interface Playoffs {
    roundNum:          string;
    confName:          string;
    seriesId:          string;
    seriesSummaryText: string;
    isSeriesCompleted: boolean;
    gameNumInSeries:   string;
    isIfNecessary:     boolean;
    vTeam:             PlayoffsHTeam;
    hTeam:             PlayoffsHTeam;
}

export interface PlayoffsHTeam {
    seedNum:        string;
    seriesWin:      string;
    isSeriesWinner: boolean;
}

export interface Watch {
    broadcast: Broadcast;
}

export interface Broadcast {
    broadcasters: Broadcasters;
    video:        Video;
    audio:        Audio;
}

export interface Audio {
    national: HTeam;
    vTeam:    HTeam;
    hTeam:    HTeam;
}

export interface HTeam {
    streams:      HTeamStream[];
    broadcasters: Canadian[];
}

export interface Canadian {
    shortName: string;
    longName:  string;
}

export interface HTeamStream {
    language: Language;
    isOnAir:  boolean;
    streamId: string;
}

export enum Language {
    English = "English",
    Spanish = "Spanish",
}

export interface Broadcasters {
    national:         Canadian[];
    canadian:         Canadian[];
    spanish_national: any[];
    vTeam:            Canadian[];
    hTeam:            Canadian[];
}

export interface Video {
    regionalBlackoutCodes: string;
    canPurchase:           boolean;
    isLeaguePass:          boolean;
    isNationalBlackout:    boolean;
    isTNTOT:               boolean;
    isVR:                  boolean;
    tntotIsOnAir:          boolean;
    isNextVR:              boolean;
    isNBAOnTNTVR:          boolean;
    isMagicLeap:           boolean;
    isOculusVenues:        boolean;
    streams:               VideoStream[];
    deepLink:              DeepLink[];
}

export interface DeepLink {
    broadcaster:         Broadcaster;
    regionalMarketCodes: string;
    iosApp:              string;
    androidApp:          string;
    desktopWeb:          string;
    mobileWeb:           string;
}

export enum Broadcaster {
    Tnt = "TNT",
}

export interface VideoStream {
    streamType:            StreamType;
    isOnAir:               boolean;
    doesArchiveExist:      boolean;
    isArchiveAvailToWatch: boolean;
    streamId:              string;
    duration:              number;
}

export enum StreamType {
    Alt = "alt",
    Condensed = "condensed",
    EspanolHTeam = "espanol_hTeam",
    EspanolNatl = "espanol_natl",
    EspanolVTeam = "espanol_vTeam",
    HTeam = "hTeam",
    Mobile = "mobile",
    VTeam = "vTeam",
}
